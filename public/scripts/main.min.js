(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){module.exports=(update=>{let placeholders={};function addObserver(id){const observer=new MutationObserver(function(mutations){mutations.forEach(function(mutation){if(mutation.attributeName==="lg-placeholder"){update({matchValue:window.location.pathname,updateType:"domReady"})}})});observer.observe(document.querySelector(id),{attributes:true,childList:false,subtree:false});placeholders[id].observer=observer}const exposed={render(html,id){if(placeholders[id]&&placeholders[id].observer){placeholders[id].observer.disconnect()}placeholders[id]={html:html}},html(){Object.keys(placeholders).filter(id=>placeholders[id].html).forEach(id=>{if(!document.querySelector(id)){throw new Error(`Trying to render, but could not find placeholder ${id}`)}addObserver(id);document.querySelector(id).innerHTML=placeholders[id].html;document.querySelector(id).setAttribute("lg-placeholder",id);delete placeholders[id].html})}};return exposed})},{}],2:[function(require,module,exports){module.exports=(update=>{window.onpopstate=function(request){update({matchValue:request.state.url},request.state)};let links=[].slice.call(document.querySelectorAll("a"));links.filter(link=>link.getAttribute("href")[0]==="/").forEach(link=>{if(!link.hasAttribute("data-router-server")){link.addEventListener("click",event=>{event.preventDefault();const url=link.getAttribute("href");history.pushState({url:url},url,url);update({matchValue:url},{url:url})})}});return{redirect(url){history.pushState({url:url},url,url)}}})},{}],3:[function(require,module,exports){const check=require("check-types");module.exports=((environmentId,options={})=>{const defaultUpdateType="get";let resetAfterCycle=true;let traditional=[];let stack=[];let extensions={};let relay;let parser=require("lr-url-parser")();let availableMiddleware={};let executingEnvironmentId=environmentId;let selectedEnvironmentIds=[environmentId];let environments={};const exposed={extension:extension,middleware:middleware,where:where,run:run,error:error,noMatch:noMatch,done:done,update:update};if(options.parser){check.assert.function(options.parser.add,'Parser needs to have a method called "add"');check.assert.function(options.parser.parse,'Parser needs to have a method called "parse"');parser=options.parser}if(options.resetAfterCycle!==undefined){check.assert.boolean(options.resetAfterCycle,"resetAfterCycle needs to be a boolean");resetAfterCycle=options.resetAfterCycle}environments[environmentId]=environment(environmentId);relay=setRelay();function setRelay(){if(resetAfterCycle){return{extensions:extensions}}else if(!relay){return{extensions:{}}}else{return relay}}function environment(id){check.assert.not.undefined(id,"Environment id cannot be empty");check.assert.match(id,/^[a-z0-9]+$/i,"Environment id needs to be a string containing only letters and or numbers");return{id:id,matches:{},middleware:[],noMatch:[],error:[],done:[]}}function extension(id,extension,isUpdater=false){check.assert.not.undefined(id,"Extension id cannot be empty");check.assert.not.undefined(extension,"Extension cannot be empty");check.assert.match(id,/^[a-z0-9]+$/i,"Extension id needs to be a string containing only letters and or numbers");check.assert.not.assigned(extensions[id],`"${id}" has already been defined as an extension`);extensions[id]=isUpdater?extension(update):extension;return exposed}function middleware(newMiddleware,...traditionals){check.assert.nonEmptyObject(newMiddleware,"Provided middleware needs to be a non empty object");Object.keys(newMiddleware).forEach(id=>{check.assert.not.assigned(availableMiddleware[id],`"${id}" has already been defined as middleware`);check.assert.function(newMiddleware[id],`"${id}" middleware is not a function`)});if(traditionals.length){check.assert.array.of.string(traditionals,"All traditional middleware names need to be strings");traditionals.forEach((id,index)=>{check.assert.equal(traditionals.indexOf(id),index,`Duplicate values found for traditional middleware "${id}"`);check.assert.equal(traditional.indexOf(id),-1,`"${id}" has already been defined as a traditional middleware function`)});traditional=[...traditional,...traditionals]}availableMiddleware=Object.assign({},availableMiddleware,newMiddleware);return exposed}function where(...environmentIds){check.assert.greater(environmentIds.length,0,"Where method missing parameters");environmentIds.forEach(id=>{check.assert.not.undefined(id,"Environment id cannot be empty");check.assert.match(id,/^[a-z0-9]+$/i,"Environment id needs to be a string containing only letters and or numbers");if(!environments[id]){environments[id]=environment(id)}});selectedEnvironmentIds=environmentIds;return exposed}function run(matchValue,middlewareId,updateType=defaultUpdateType){check.assert.not.undefined(matchValue,"Match value cannot be empty");check.assert.string(matchValue,"Match value needs to be a string");check.assert.not.undefined(middlewareId,"Middleware id cannot be empty");check.assert.match(middlewareId,/^[a-z0-9\.]+$/i,'Middleware id needs to be a string containing only letters,numbers and an optional "."');check.assert.match(updateType,/^[a-z0-9]+$/i,"Update type needs to be a string containing only letters and or numbers");selectedEnvironmentIds.forEach(environmentId=>{environments[environmentId].middleware.push({matchValue:matchValue,id:middlewareId,updateType:updateType.toLowerCase()})});return exposed}function error(middlewareId,updateType=defaultUpdateType){check.assert.zero(arguments.length-1,"Error needs exactly one argument");check.assert.match(middlewareId,/^[a-z0-9\.]+$/i,'Middleware id needs to be a string containing only letters,numbers and an optional "."');selectedEnvironmentIds.forEach(id=>environments[id].error.push({id:middlewareId,updateType:updateType}));return exposed}function noMatch(middlewareId,updateType=defaultUpdateType){check.assert.zero(arguments.length-1,"NoMatch needs exactly one argument");check.assert.match(middlewareId,/^[a-z0-9\.]+$/i,'Middleware id needs to be a string containing only letters,numbers and an optional "."');selectedEnvironmentIds.forEach(id=>environments[id].noMatch.push({id:middlewareId,updateType:updateType}));return exposed}function done(middlewareId,updateType=defaultUpdateType){check.assert.zero(arguments.length-1,"Done needs exactly one argument");check.assert.match(middlewareId,/^[a-z0-9\.]+$/i,'Middleware id needs to be a string containing only letters,numbers and an optional "."');selectedEnvironmentIds.forEach(id=>environments[id].done.push({id:middlewareId,updateType:updateType}));return exposed}function update(options,...parameters){check.assert.assigned(options.matchValue,"Update function cannot find a matchValue");const matchValue=parser.parse(options.matchValue);const updateType=options.updateType?options.updateType.toLowerCase():defaultUpdateType;relay=setRelay();relay.parameters=matchValue.parameters;const environment=environments[executingEnvironmentId];let middleware=environment.middleware.filter(record=>record.matchValue===matchValue.path||record.matchValue==="*").filter(record=>record.updateType===updateType);stack=[...stack,...middleware];function addNoMatchMiddleware(){if(environment.done.length<1){console.warn(`No match for ${matchValue.path} There is no "noMatch" middleware defined`)}stack=[...stack,...environment.noMatch.filter(middleware=>middleware.updateType===updateType)]}function addDoneMiddleware(){if(environment.done.length<1){console.warn('There is no "done" middleware defined')}stack=[...stack,...environment.done.filter(middleware=>middleware.updateType===updateType)]}function addErrorMiddleware(){if(environment.error.length<1){console.warn('Error running the middleware stack, but no "error" middleware defined')}stack=[...stack,...environment.error.filter(middleware=>middleware.updateType===updateType)]}if(middleware.length===0){addNoMatchMiddleware()}addDoneMiddleware();function thunkify(record){const id=record.id;const callback=availableMiddleware[id];check.assert.assigned(callback,`Middleware ${id} not found`);check.assert.function(callback,"Middleware needs to be a function");return function(defined={}){check.assert.object(defined,"Relay additions need to be an object");relay=Object.assign({},relay,defined);const next=stack.length<1?()=>{}:thunkify(stack.shift());if(traditional.indexOf(id)>-1){callback(...parameters,next)}else{callback(next,relay,...parameters)}}}try{if(stack.length>0){thunkify(stack.shift())(relay)}}catch(error){stack=[];addErrorMiddleware();addDoneMiddleware();relay.error=error;thunkify(stack.shift())(relay)}}return exposed})},{"check-types":4,"lr-url-parser":5}],4:[function(require,module,exports){(function(globals){"use strict";var strings,messages,predicates,functions,assert,not,maybe,collections,slice;strings={v:"value",n:"number",s:"string",b:"boolean",o:"object",t:"type",a:"array",al:"array-like",i:"iterable",d:"date",f:"function",l:"length"};messages={};predicates={};[{n:"equal",f:equal,s:"v"},{n:"undefined",f:isUndefined,s:"v"},{n:"null",f:isNull,s:"v"},{n:"assigned",f:assigned,s:"v"},{n:"includes",f:includes,s:"v"},{n:"zero",f:zero},{n:"infinity",f:infinity},{n:"number",f:number},{n:"integer",f:integer},{n:"even",f:even},{n:"odd",f:odd},{n:"greater",f:greater},{n:"less",f:less},{n:"between",f:between},{n:"greaterOrEqual",f:greaterOrEqual},{n:"lessOrEqual",f:lessOrEqual},{n:"inRange",f:inRange},{n:"positive",f:positive},{n:"negative",f:negative},{n:"string",f:string,s:"s"},{n:"emptyString",f:emptyString,s:"s"},{n:"nonEmptyString",f:nonEmptyString,s:"s"},{n:"contains",f:contains,s:"s"},{n:"match",f:match,s:"s"},{n:"boolean",f:boolean,s:"b"},{n:"object",f:object,s:"o"},{n:"emptyObject",f:emptyObject,s:"o"},{n:"nonEmptyObject",f:nonEmptyObject,s:"o"},{n:"instanceStrict",f:instanceStrict,s:"t"},{n:"instance",f:instance,s:"t"},{n:"like",f:like,s:"t"},{n:"array",f:array,s:"a"},{n:"emptyArray",f:emptyArray,s:"a"},{n:"nonEmptyArray",f:nonEmptyArray,s:"a"},{n:"arrayLike",f:arrayLike,s:"al"},{n:"iterable",f:iterable,s:"i"},{n:"date",f:date,s:"d"},{n:"function",f:isFunction,s:"f"},{n:"hasLength",f:hasLength,s:"l"}].map(function(data){var n=data.n;messages[n]="Invalid "+strings[data.s||"n"];predicates[n]=data.f});functions={apply:apply,map:map,all:all,any:any};collections=["array","arrayLike","iterable","object"];slice=Array.prototype.slice;functions=mixin(functions,predicates);assert=createModifiedPredicates(assertModifier,assertImpl);not=createModifiedPredicates(notModifier,notImpl);maybe=createModifiedPredicates(maybeModifier,maybeImpl);assert.not=createModifiedModifier(assertModifier,not);assert.maybe=createModifiedModifier(assertModifier,maybe);collections.forEach(createOfPredicates);createOfModifiers(assert,assertModifier);createOfModifiers(not,notModifier);collections.forEach(createMaybeOfModifiers);exportFunctions(mixin(functions,{assert:assert,not:not,maybe:maybe}));function equal(lhs,rhs){return lhs===rhs}function isUndefined(data){return data===undefined}function isNull(data){return data===null}function assigned(data){return!isUndefined(data)&&!isNull(data)}function zero(data){return data===0}function infinity(data){return data===Number.POSITIVE_INFINITY||data===Number.NEGATIVE_INFINITY}function number(data){return typeof data==="number"&&isNaN(data)===false&&data!==Number.POSITIVE_INFINITY&&data!==Number.NEGATIVE_INFINITY}function integer(data){return number(data)&&data%1===0}function even(data){return number(data)&&data%2===0}function odd(data){return integer(data)&&!even(data)}function greater(lhs,rhs){return number(lhs)&&lhs>rhs}function less(lhs,rhs){return number(lhs)&&lhs<rhs}function between(data,x,y){if(x<y){return greater(data,x)&&less(data,y)}return less(data,x)&&greater(data,y)}function greaterOrEqual(lhs,rhs){return number(lhs)&&lhs>=rhs}function lessOrEqual(lhs,rhs){return number(lhs)&&lhs<=rhs}function inRange(data,x,y){if(x<y){return greaterOrEqual(data,x)&&lessOrEqual(data,y)}return lessOrEqual(data,x)&&greaterOrEqual(data,y)}function positive(data){return greater(data,0)}function negative(data){return less(data,0)}function string(data){return typeof data==="string"}function emptyString(data){return data===""}function nonEmptyString(data){return string(data)&&data!==""}function contains(data,substring){return string(data)&&data.indexOf(substring)!==-1}function match(data,regex){return string(data)&&!!data.match(regex)}function boolean(data){return data===false||data===true}function object(data){return Object.prototype.toString.call(data)==="[object Object]"}function emptyObject(data){return object(data)&&Object.keys(data).length===0}function nonEmptyObject(data){return object(data)&&Object.keys(data).length>0}function instanceStrict(data,prototype){try{return data instanceof prototype}catch(error){return false}}function instance(data,prototype){try{return instanceStrict(data,prototype)||data.constructor.name===prototype.name||Object.prototype.toString.call(data)==="[object "+prototype.name+"]"}catch(error){return false}}function like(data,archetype){var name;for(name in archetype){if(archetype.hasOwnProperty(name)){if(data.hasOwnProperty(name)===false||typeof data[name]!==typeof archetype[name]){return false}if(object(data[name])&&like(data[name],archetype[name])===false){return false}}}return true}function array(data){return Array.isArray(data)}function emptyArray(data){return array(data)&&data.length===0}function nonEmptyArray(data){return array(data)&&data.length>0}function arrayLike(data){return assigned(data)&&number(data.length)}function iterable(data){if(typeof Symbol==="undefined"){return arrayLike(data)}return assigned(data)&&isFunction(data[Symbol.iterator])}function includes(data,value){var iterator,iteration;if(not.assigned(data)){return false}try{if(typeof Symbol!=="undefined"&&data[Symbol.iterator]&&isFunction(data.values)){iterator=data.values();do{iteration=iterator.next();if(iteration.value===value){return true}}while(!iteration.done);return false}Object.keys(data).forEach(function(key){if(data[key]===value){throw 0}})}catch(ignore){return true}return false}function hasLength(data,length){return assigned(data)&&data.length===length}function date(data){try{return instance(data,Date)&&integer(data.getTime())}catch(error){return false}}function isFunction(data){return typeof data==="function"}function apply(data,predicates){assert.array(data);if(isFunction(predicates)){return data.map(function(value){return predicates(value)})}assert.array(predicates);assert.hasLength(data,predicates.length);return data.map(function(value,index){return predicates[index](value)})}function map(data,predicates){assert.object(data);if(isFunction(predicates)){return mapSimple(data,predicates)}assert.object(predicates);return mapComplex(data,predicates)}function mapSimple(data,predicate){var result={};Object.keys(data).forEach(function(key){result[key]=predicate(data[key])});return result}function mapComplex(data,predicates){var result={};Object.keys(predicates).forEach(function(key){var predicate=predicates[key];if(isFunction(predicate)){if(not.assigned(data)){result[key]=!!predicate.m}else{result[key]=predicate(data[key])}}else if(object(predicate)){result[key]=mapComplex(data[key],predicate)}});return result}function all(data){if(array(data)){return testArray(data,false)}assert.object(data);return testObject(data,false)}function testArray(data,result){var i;for(i=0;i<data.length;i+=1){if(data[i]===result){return result}}return!result}function testObject(data,result){var key,value;for(key in data){if(data.hasOwnProperty(key)){value=data[key];if(object(value)&&testObject(value,result)===result){return result}if(value===result){return result}}}return!result}function any(data){if(array(data)){return testArray(data,true)}assert.object(data);return testObject(data,true)}function mixin(target,source){Object.keys(source).forEach(function(key){target[key]=source[key]});return target}function assertModifier(predicate,defaultMessage){return function(){assertPredicate(predicate,arguments,defaultMessage)}}function assertPredicate(predicate,args,defaultMessage){var argCount=predicate.l||predicate.length;var message=args[argCount];var ErrorType=args[argCount+1];assertImpl(predicate.apply(null,args),nonEmptyString(message)?message:defaultMessage,isFunction(ErrorType)?ErrorType:TypeError)}function assertImpl(value,message,ErrorType){if(value===false){throw new(ErrorType||Error)(message||"Assertion failed")}}function notModifier(predicate){var modifiedPredicate=function(){return notImpl(predicate.apply(null,arguments))};modifiedPredicate.l=predicate.length;return modifiedPredicate}function notImpl(value){return!value}function maybeModifier(predicate){var modifiedPredicate=function(){if(not.assigned(arguments[0])){return true}return predicate.apply(null,arguments)};modifiedPredicate.l=predicate.length;modifiedPredicate.m=true;return modifiedPredicate}function maybeImpl(value){if(assigned(value)===false){return true}return value}function ofModifier(target,type,predicate){var modifiedPredicate=function(){var collection,args;collection=arguments[0];if(target==="maybe"&&not.assigned(collection)){return true}if(!type(collection)){return false}collection=coerceCollection(type,collection);args=slice.call(arguments,1);try{collection.forEach(function(item){if((target!=="maybe"||assigned(item))&&!predicate.apply(null,[item].concat(args))){throw 0}})}catch(ignore){return false}return true};modifiedPredicate.l=predicate.length;return modifiedPredicate}function coerceCollection(type,collection){switch(type){case arrayLike:return slice.call(collection);case object:return Object.keys(collection).map(function(key){return collection[key]});default:return collection}}function createModifiedPredicates(modifier,object){return createModifiedFunctions([modifier,predicates,object])}function createModifiedFunctions(args){var modifier,object,functions,result;modifier=args.shift();object=args.pop();functions=args.pop();result=object||{};Object.keys(functions).forEach(function(key){Object.defineProperty(result,key,{configurable:false,enumerable:true,writable:false,value:modifier.apply(null,args.concat(functions[key],messages[key]))})});return result}function createModifiedModifier(modifier,modified){return createModifiedFunctions([modifier,modified,null])}function createOfPredicates(key){predicates[key].of=createModifiedFunctions([ofModifier.bind(null,null),predicates[key],predicates,null])}function createOfModifiers(base,modifier){collections.forEach(function(key){base[key].of=createModifiedModifier(modifier,predicates[key].of)})}function createMaybeOfModifiers(key){maybe[key].of=createModifiedFunctions([ofModifier.bind(null,"maybe"),predicates[key],predicates,null]);assert.maybe[key].of=createModifiedModifier(assertModifier,maybe[key].of);assert.not[key].of=createModifiedModifier(assertModifier,not[key].of)}function exportFunctions(functions){if(typeof define==="function"&&define.amd){define(function(){return functions})}else if(typeof module!=="undefined"&&module!==null&&module.exports){module.exports=functions}else{globals.check=functions}}})(this)},{}],5:[function(require,module,exports){"use-strict";module.exports=function(){let paths=[];let unique={};function parts(path){let parts=path.split("?").shift().split("/");parts.shift();return parts.map(part=>{return{root:!part?true:false,static:part[0]!==":",value:part[0]===":"?part.slice(1):part}})}return{add(path){if(path[0]==="/"&&!unique[path]){paths.push({path:path,parts:parts(path)});unique[path]=true;return true}else{return false}},parse(path){if(path[0]!=="/"){return{path:path}}const needle=parts(path);let match=paths.filter(path=>path.parts.length===needle.length).filter(path=>{return path.parts.filter((part,index)=>{return part.value!==needle[index].value&&part.static}).length===0});if(match.length>0){match=match.pop()}if(!Array.isArray(match)){let parameters={};match.parts.forEach((part,index)=>{if(!part.static){parameters[part.value]=parseInt(needle[index].value)}});return{path:match.path,parameters:parameters}}return{path:path.split("?").shift()}}}}},{}],6:[function(require,module,exports){"use strict";document.addEventListener("DOMContentLoaded",function(event){var router=require("lr-client-router");var renderer=require("lr-client-renderer");var road=require("lr-core")("client");road.extension("router",router,true).extension("renderer",renderer,true).middleware({"response.html":function responseHtml(next,relay){relay.extensions.renderer.html()},"events.navigation":require("../middleware/events/navigation")});require("./road")(road).where("client").update({matchValue:window.location.pathname,updateType:"domReady"})})},{"../middleware/events/navigation":8,"./road":7,"lr-client-renderer":1,"lr-client-router":2,"lr-core":3}],7:[function(require,module,exports){"use strict";module.exports=function(road){road.where("webserver","client").middleware({debug:function debug(next,relay,request){console.log(request.url);next()},"templating.components.navigation":require("../middleware/templating/components/navigation"),"templating.components.about":require("../middleware/templating/components/about"),"templating.components.home":require("../middleware/templating/components/home"),"templating.components.reference":require("../middleware/templating/components/reference"),"templating.components.faq":require("../middleware/templating/components/faq"),"templating.components.guide":require("../middleware/templating/components/guide"),"templating.components.error":require("../middleware/templating/components/error"),"templating.components.noMatch":require("../middleware/templating/components/noMatch")}).run("*","debug").where("webserver").run("*","templating.layouts.default").run("*","templating.components.navigation").noMatch("templating.layouts.default").where("client").run("*","events.navigation","domReady").where("webserver","client").run("/","templating.components.home").run("/guide","templating.components.guide").run("/reference","templating.components.reference").run("/faq","templating.components.faq").run("/about","templating.components.about").noMatch("templating.components.noMatch").error("templating.components.error").done("response.html");return road}},{"../middleware/templating/components/about":9,"../middleware/templating/components/error":10,"../middleware/templating/components/faq":11,"../middleware/templating/components/guide":12,"../middleware/templating/components/home":13,"../middleware/templating/components/navigation":14,"../middleware/templating/components/noMatch":15,"../middleware/templating/components/reference":16}],8:[function(require,module,exports){"use strict";module.exports=function(next,relay){console.log("events baby!");next()}},{}],9:[function(require,module,exports){"use strict";module.exports=function(next,relay){relay.extensions.renderer.render('\n    <h1>About</h1>\n    <p>Some more content</p>\n    <div class="bla">\n      <h2> nested ja</h2>\n    </div>\n  ',"#content");next()}},{}],10:[function(require,module,exports){"use strict";module.exports=function(next,relay){relay.extensions.renderer.render("\n    <h1>Error</h1>\n    <pre>"+relay.error+"</pre>\n  ","#content");next()}},{}],11:[function(require,module,exports){"use strict";module.exports=function(next,relay){relay.extensions.renderer.render("\n    <h1>FAQ</h1>\n  ","#content");next()}},{}],12:[function(require,module,exports){"use strict";module.exports=function(next,relay){relay.extensions.renderer.render("\n    <h1>Guide</h1>\n  ","#content");next()}},{}],13:[function(require,module,exports){"use strict";module.exports=function(next,relay){relay.extensions.renderer.render('\n    <h1>Home</h1>\n    <p>Some more content</p>\n    <div class="bla">\n      <h2> nested</h2>\n    </div>\n  ',"#content");next()}},{}],14:[function(require,module,exports){"use strict";module.exports=function(next,relay){relay.extensions.renderer.render('\n    <nav>\n      <ul>\n        <li><a href="/">Home</a></li>\n        <li><a href="/guide">Guide</a></li>\n        <li><a href="/reference">Reference</a></li>\n        <li><a href="/faq">Faq</a></li>\n        <li><a href="/about">About</a></li>\n      </ul>\n    </nav>\n  ',"#navigation");next()}},{}],15:[function(require,module,exports){"use strict";module.exports=function(next,relay,request){relay.extensions.renderer.render("\n    <h1>404 - Page not found</h1>\n    <pre>\n      Oh my, "+request.url+" could not be found\n    </pre>\n  ","#content");next()}},{}],16:[function(require,module,exports){"use strict";module.exports=function(next,relay){relay.extensions.renderer.render("\n    <h1>Reference</h1>\n  ","#content");next()}},{}]},{},[6]);
